// This test checks that addAnimal("cat","Biddy","Black and white");
// does result in an Animal being created with these values,
// and currentId at 0,
// and then is added to animals.
Shelter s = new Shelter();
s.addAnimal("cat","Biddy","Black and white");
System.out.println(s.getAnimals().size()==1); // true
System.out.println(s.getAnimals().get(0).getName().equals("Biddy")); // true
System.out.println(s.getAnimals().get(0).getKind().equals("cat")); // true
System.out.println(s.getAnimals().get(0).getDescription().equals("Black and white")); // true
System.out.println(s.getAnimals().get(0).getWeek()); // 1


// tests homed method for Shelter
Shelter s = new Shelter();
s.populate();
System.out.println(s.getAnimals().size()); //4
System.out.println(s.homed(50,"cat","Billy")); // true
System.out.println(s.getAnimals().size()); //3
System.out.println(s.homed(51,"cat","Billy")); // false
System.out.println(s.getAnimals().size()); //3
System.out.println(s.homed(50,"dog","Billy")); // false
System.out.println(s.getAnimals().size()); //3
System.out.println(s.homed(50,"cat","Puss")); // false
System.out.println(s.getAnimals().size()); //3


// checks that showRecentAnimals();
// does result in the correct output.
Shelter s = new Shelter();
s.populate();
s.showRecentAnimals();


// This test checks that there is a zero-argument constructor in Shelter
// that sets currentWeek to 1 and assigns animals to a suitable empty ArrayList object.
Shelter s = new Shelter();
System.out.println(s.getCurrentWeek());

System.out.println(s.getAnimals() instanceof ArrayList);
System.out.println(s.getAnimals().size() == 0);


// checks that showRecentAnimals();
// does result in the correct output.
Shelter s = new Shelter();
s.showRecentAnimals();